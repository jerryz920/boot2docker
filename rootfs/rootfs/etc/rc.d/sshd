#!/bin/sh

# Configure sshd and acknowledge for persistence in /var/lib/boot2docker of the keys/config
# Move /usr/local/etc/ssh to /var/lib/boot2docker/ssh if it doesn't exist
if [ ! -d /var/lib/boot2docker/ssh ]; then
    mv /usr/local/etc/ssh /var/lib/boot2docker/
else # if it exists, remove the ramdisk's ssh config, so that the hard drive's is properly linked
    rm -rf /usr/local/etc/ssh
fi
ln -s /var/lib/boot2docker/ssh /usr/local/etc/ssh

if [ ! -f /usr/local/etc/ssh/ssh_config ]; then
    mv /usr/local/etc/ssh/ssh_config_example /usr/local/etc/ssh/ssh_config
fi
if [ ! -f /usr/local/etc/ssh/sshd_config ]; then
    mv /usr/local/etc/ssh/sshd_config_example /usr/local/etc/ssh/sshd_config
fi

if ! grep -q "^UseDNS no" /usr/local/etc/ssh/sshd_config; then
    # speed up login
    echo "UseDNS no" >> /usr/local/etc/ssh/sshd_config
fi

#fetch sshkey first
mkdir -p /home/docker/.ssh
curl -L http://169.254.169.254/latest/meta-data/public-keys/0/openssh-key >> /home/docker/.ssh/authorized_keys
chown -R docker:staff /home/docker/.ssh

#set the bridge network
local_ip=`curl -L http://169.254.169.254/latest/meta-data/local-ipv4`
brctl addbr docker1

ipmask=`ip addr | grep $local_ip | awk '{print $2}'`
gateway=`ip route | grep default | awk '{print $3}'`

#ip addr flush dev eth0
ifconfig eth0 0.0.0.0
brctl addif docker1 eth0
ip addr replace $ipmask dev docker1
ifconfig docker1 up
#ifconfig docker1 `ipmask` up
route add default gw $gateway dev docker1


/usr/local/etc/init.d/openssh start
